"use strict";const todoForm=document.getElementById("form__todo"),todoList=document.querySelector(".todo__list"),listLengthEl=todoList.querySelector(".todo__list-items--number"),deleteModalEl=document.querySelector(".modal__delete"),toggleThemeBtn=document.querySelector(".toggle-theme");class App{listArr=[];selectedListItem;constructor(){this.#e(),todoForm.addEventListener("submit",this._createListItem.bind(this)),todoList.addEventListener("click",(e=>{this._checkListItem(e),this._displayModal(e)})),deleteModalEl.addEventListener("click",(e=>{this._handleModal(e)})),toggleThemeBtn.addEventListener("click",this._toggleTheme.bind(this))}#t(){const e=todoForm.querySelector("input");e.value="",e.focus()}#e(){listLengthEl.textContent=this.listArr.length}#s(){deleteModalEl.classList.remove("hidden"),deleteModalEl.classList.add("show")}#l(){deleteModalEl.classList.remove("show"),deleteModalEl.classList.add("hidden")}#i(e){e.remove()}#n(e){const t=e.parentElement,s=this.listArr.indexOf(t);this.listArr.splice(s,1),this.#i(t),this.#e(),this.#l()}#o(){this.#l(),document.addEventListener("keydown",(e=>{"Escape"===e.key&&this.#l()}))}#d(e,t){const s=document.querySelector(".background-img"),l=document.querySelector(".background");let i=`images/bg-desktop-${e}.jpg`,n=`switch to ${t} modus`,o=`switch to ${t} modus`,d=`\n      <picture>\n        <source\n          media="(max-width:599px)"\n          srcset="images/bg-mobile-${e}.jpg"\n        />\n        <source\n          media="(min-width:600px)"\n          srcset="images/bg-desktop-${e}.jpg"\n        />\n        <img\n          src="images/bg-mobile-${e}.jpg"\n          class="background-img"\n          aria-hidden="true"\n        />\n    </picture>\n    `;s.src=i,toggleThemeBtn.ariaLabel=n,toggleThemeBtn.alt=o,l.innerHTML=d}_createListItem(e){e.preventDefault();const t=todoForm.querySelector("input").value;if(""===t)return;const s=document.createElement("li");s.className="todo__list--item",s.innerHTML=`\n              <div class="circle" data-checkable="false">\n                  <img\n                    src="images/icon-check.svg"\n                    alt="ckecked"\n                    class="checked-icon"\n                  />\n                </div>\n                <p class="todo__list--item__text">${t}</p>\n                <div class="delete-icon">\n                  <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18">\n        <path\n          fill="#9394a5"\n          fill-rule="evenodd"\n          d="M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z"\n        />\n      </svg>\n                </div>\n        `,todoList.insertAdjacentElement("afterbegin",s),this.listArr.push(s),this.#t(),this.#e()}_displayModal(e){const t=e.target.closest(".delete-icon");this.selectedListItem=t,t&&this.#s()}_checkListItem(e){const t=e.target;t.classList.contains("circle")&&("false"===t.getAttribute("data-checkable")?(t.setAttribute("data-checkable","true"),t.parentElement.classList.add("checked")):(t.setAttribute("data-checkable","false"),t.parentElement.classList.remove("checked")))}_handleModal(e){if(e.target.classList.contains("accept"))this.#n(this.selectedListItem);else{if(!e.target.classList.contains("decline"))return;this.#o()}}_toggleTheme(){let e,t;document.documentElement.classList.contains("dark")?(e="light",t="dark",this.#d(e,t),toggleThemeBtn.src="images/icon-moon.svg",document.documentElement.classList.remove("dark")):(e="dark",t="light",this.#d(e,t),toggleThemeBtn.src="images/icon-sun.svg",document.documentElement.classList.add("dark"))}}new App;
//# sourceMappingURL=main.js.map