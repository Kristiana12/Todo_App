"use strict";const todoForm=document.getElementById("form__todo"),todoList=document.querySelector(".todo__list"),listLengthEl=todoList.querySelector(".todo__list-items--number"),deleteModalEl=document.querySelector(".modal__delete"),toggleThemeBtn=document.querySelector(".toggle-theme"),sortContainers=document.querySelectorAll(".todo__list--sort"),clearCompletedBtn=document.querySelector("[data-clear]");class App{listArr=[];selectedListItem;constructor(){this.#t(),todoForm.addEventListener("submit",this._createListItem.bind(this)),todoList.addEventListener("click",(t=>{this._checkListItem(t),this._displayModal(t)})),deleteModalEl.addEventListener("click",(t=>{this._handleModal(t)})),toggleThemeBtn.addEventListener("click",this._toggleTheme.bind(this)),clearCompletedBtn.addEventListener("click",this._clearCompletedTasks.bind(this))}#e(){const t=todoForm.querySelector("input");t.value="",t.focus()}#t(){listLengthEl.textContent=this.listArr.length}#s(){deleteModalEl.classList.remove("hidden"),deleteModalEl.classList.add("show")}#i(){deleteModalEl.classList.remove("show"),deleteModalEl.classList.add("hidden")}#l(t){t.remove()}#a(t){const e=t.parentElement,s=this.listArr.indexOf(e);this.listArr.splice(s,1),this.#l(e),this.#t(),this.#i()}#o(t,e){const s=document.querySelector(".background-img"),i=document.querySelector(".background");let l=`images/bg-desktop-${t}.jpg`,a=`switch to ${e} modus`,o=`switch to ${e} modus`,n=`\n      <picture>\n        <source\n          media="(max-width:599px)"\n          srcset="images/bg-mobile-${t}.jpg"\n        />\n        <source\n          media="(min-width:600px)"\n          srcset="images/bg-desktop-${t}.jpg"\n        />\n        <img\n          src="images/bg-mobile-${t}.jpg"\n          class="background-img"\n          aria-hidden="true"\n        />\n    </picture>\n    `;s.src=l,toggleThemeBtn.ariaLabel=a,toggleThemeBtn.alt=o,i.innerHTML=n}_createListItem(t){t.preventDefault();const e=todoForm.querySelector("input").value;if(""===e)return;const s=document.createElement("li");s.className="todo__list--item active",s.setAttribute("draggable","true"),s.innerHTML=`\n              <div class="circle" data-checkable="false">\n                  <img\n                    src="images/icon-check.svg"\n                    alt="ckecked"\n                    class="checked-icon"\n                  />\n                </div>\n                <p class="todo__list--item__text">${e}</p>\n                <div class="delete-icon">\n                  <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18">\n        <path\n          fill="#9394a5"\n          fill-rule="evenodd"\n          d="M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z"\n        />\n      </svg>\n                </div>\n        `,todoList.insertAdjacentElement("afterbegin",s),this.listArr.unshift(s),this.#e(),this.#t()}_displayModal(t){const e=t.target.closest(".delete-icon");this.selectedListItem=e,e&&this.#s()}_checkListItem(t){t.target.classList.contains("circle")&&("false"===t.target.getAttribute("data-checkable")?(t.target.setAttribute("data-checkable","true"),t.target.parentElement.classList.add("checked"),t.target.parentElement.classList.remove("active")):(t.target.setAttribute("data-checkable","false"),t.target.parentElement.classList.remove("checked"),t.target.parentElement.classList.add("active")))}_handleModal(t){if(t.target.classList.contains("accept"))this.#a(this.selectedListItem);else{if(!t.target.classList.contains("decline"))return;this.#i()}}_toggleTheme(){let t,e;document.documentElement.classList.contains("dark")?(t="light",e="dark",this.#o(t,e),toggleThemeBtn.src="images/icon-moon.svg",document.documentElement.classList.remove("dark")):(t="dark",e="light",this.#o(t,e),toggleThemeBtn.src="images/icon-sun.svg",document.documentElement.classList.add("dark"))}_clearCompletedTasks(){this.listArr.forEach((t=>{t.classList.contains("checked")&&this.#l(t)}));const t=this.listArr.filter((t=>!t.classList.contains("checked")));this.listArr=t,this.#t()}}class SortingItems{constructor(){sortContainers.forEach((t=>t.addEventListener("click",this._sorting.bind(this))))}#n(t){document.querySelectorAll("p[data-sort]").forEach((t=>t.classList.remove("active"))),t.target.classList.add("active")}#c(t){document.querySelectorAll(".todo__list--item").forEach((e=>{e.classList.contains(t)?e.style.display="flex":e.style.display="none"}))}_sorting(t){if("all"===t.target.dataset.sort)this.#c("todo__list--item"),this.#n(t);else if("active"===t.target.dataset.sort)this.#c("active"),this.#n(t);else{if("completed"!==t.target.dataset.sort)return;this.#c("checked"),this.#n(t)}}}new App,new SortingItems;
//# sourceMappingURL=main.js.map